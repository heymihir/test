filter_conditions = [
    lambda col: 'EOP' in col or 'MTD' in col,  
    lambda col: ('Avg' in col and ('Mar' in col or 'Feb' in col)),  
    lambda col: col in ['cust_id', 'RM', 'TL', 'region', 'city']  
]

# Filter required columns based on conditions
req_cols = [col for col in df_manual.columns if any(cond(col) for cond in filter_conditions)]

# Extract lm_cols (Last Month Columns)
lm_cols = [col for col in df_manual.columns if col.startswith("EOP TOTAL")]
lm_cols = sorted(lm_cols, key=lambda x: pd.to_datetime(x[-10:]))  # Sorting by date
lm_cols = lm_cols[-2:] if len(lm_cols) >= 2 else lm_cols  # Get the 2 latest columns (or 1 if only 1 exists)

# Extract daily_cols (Daily Columns)
daily_cols = [col for col in df_manual.columns if col.startswith("EOP-")]
daily_cols = sorted(daily_cols, key=lambda x: int(x.split("-")[-1]))  # Sorting by numeric date
daily_cols = daily_cols[-2:] if len(daily_cols) >= 2 else daily_cols  # Get the 2 latest columns (or 1 if only 1 exists)

# Extend required columns
req_cols.extend(daily_cols + lm_cols)

# Display the final required columns
req_cols
