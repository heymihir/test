def update_balances(base_data, daily_data_list):
    daily_data_all = pd.concat(daily_data_list, ignore_index=True)
    update_columns = [col for col in daily_data_all.columns if col != 'cust_id']
    existing = daily_data_all[daily_data_all['cust_id'].isin(base_data['cust_id'])]
    new = daily_data_all[~daily_data_all['cust_id'].isin(base_data['cust_id'])]
    new['NTB_FLAG'] = 1
    base_data.loc[base_data['cust_id'].isin(existing['cust_id']), 'NTB_FLAG'] = 0
    base_index = base_data.set_index('cust_id')
    existing_index = existing.set_index('cust_id')
    for col in update_columns:
        if col not in base_index.columns:
            base_index[col] = np.nan
        base_index.loc[existing_index.index, col] = existing_index[col]
    updated = base_index.reset_index()
    updated = pd.concat([updated, new], ignore_index=True, sort=False)
    return updated

df_updated = update_balances(df_base_data.copy(), [df_cua_avg, df_tmd_avg, df_eefc_avg])
