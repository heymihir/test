import pandas as pd
import numpy as np

# Sample data for demonstration; replace with your actual DataFrame
data = {
    'City': ['New York', 'Los Angeles', 'banglore total', 'Chicago', 'Chennai total'],
    'TL': [10, 20, 30, 40, 50],
    'Sales': [100, -50, 200, -300, 150],
    'Profit': [50, 10, -20, 30, -5],
    'Extra1': [5, 3, 7, 2, 9],
    'Extra2': [8, -2, 4, 6, 1],
    'Extra3': [12, 15, -3, 8, 6],
    'Extra4': [2, 3, 1, 5, 4],
    'Extra5': [7, 6, 5, 4, 3],
    'Extra6': [1, 2, 3, 4, 5],
    'Extra7': [9, 8, 7, 6, 5],
    'Extra8': [4, 3, 2, 1, 0]
}
pivot_1 = pd.DataFrame(data)

original_columns = list(pivot_1.columns)
num_original_columns = len(original_columns)

def map_new_col_index(orig_index):
    if orig_index < 2:
        return orig_index
    shift = (orig_index - 2) // 6
    return orig_index + shift

num_inserted_cols = 0 if num_original_columns <= 2 else ((num_original_columns - 2 - 1) // 6 + 1)
final_num_cols = num_original_columns + num_inserted_cols

merged_headers = ['CUA', 'EEFC', 'TMD', 'ASSTES']
group_width = 6
group_gap = 1

with pd.ExcelWriter('formatted_pivot.xlsx', engine='xlsxwriter') as writer:
    start_data_row = 2
    pivot_1.to_excel(writer, index=False, sheet_name='Sheet1', startrow=start_data_row, header=False)
    workbook = writer.book
    worksheet = writer.sheets['Sheet1']

    cell_border = 1

    top_merge_format = workbook.add_format({
        'bold': True,
        'font_name': 'Calibri',
        'align': 'center',
        'valign': 'vcenter',
        'bg_color': '#D90019',
        'font_color': '#FFFFFF',
        'border': cell_border
    })

    header_format = workbook.add_format({
        'bold': True,
        'font_name': 'Calibri',
        'align': 'center',
        'valign': 'vcenter',
        'bg_color': '#4A4A4A',
        'font_color': '#FFFFFF',
        'border': cell_border
    })

    cell_format = workbook.add_format({
        'font_name': 'Calibri',
        'font_color': '#101820',
        'border': cell_border
    })

    negative_format = workbook.add_format({
        'font_name': 'Calibri',
        'font_color': '#DC143C',
        'border': cell_border
    })

    total_row_format = workbook.add_format({
        'bold': True,
        'font_name': 'Calibri',
        'bg_color': '#D1D3D4',
        'font_color': '#101820',
        'border': cell_border
    })

    worksheet.write_blank(0, 0, None, top_merge_format)
    worksheet.write_blank(0, 1, None, top_merge_format)
    
    for i, label in enumerate(merged_headers):
        start_col = 2 + i * (group_width + group_gap)
        end_col = start_col + group_width - 1
        worksheet.merge_range(0, start_col, 0, end_col, label, top_merge_format)
        gap_col = end_col + 1
        worksheet.write_blank(0, gap_col, None, top_merge_format)

    for orig_idx, col_name in enumerate(original_columns):
        new_col = map_new_col_index(orig_idx)
        worksheet.write(1, new_col, col_name, header_format)

    all_new_cols = set(range(final_num_cols))
    used_cols = {map_new_col_index(i) for i in range(num_original_columns)}
    blank_cols = all_new_cols - used_cols
    for col in blank_cols:
        worksheet.write_blank(1, col, None, cell_format)

    for row_num, row in enumerate(pivot_1.itertuples(index=False), start=start_data_row):
        row_is_total = "total" in str(row[0])
        row_format = total_row_format if row_is_total else None
        for orig_idx, cell_value in enumerate(row):
            new_col = map_new_col_index(orig_idx)
            current_format = cell_format
            if pd.notna(cell_value) and isinstance(cell_value, (int, float)) and cell_value < 0 and row_format is None:
                current_format = negative_format
            if row_format is not None:
                current_format = total_row_format
            worksheet.write(row_num, new_col, cell_value, current_format)
        for col in blank_cols:
            worksheet.write_blank(row_num, col, None, cell_format)

    for col in range(final_num_cols):
        header_text = ""
        for orig_idx in range(num_original_columns):
            if map_new_col_index(orig_idx) == col:
                header_text = str(original_columns[orig_idx])
                break
        max_len = len(header_text)
        for orig_idx in range(num_original_columns):
            if map_new_col_index(orig_idx) == col:
                col_data = pivot_1.iloc[:, orig_idx].astype(str)
                max_len = max(max_len, col_data.map(len).max())
        if col in blank_cols:
            worksheet.set_column(col, col, 3)
        else:
            worksheet.set_column(col, col, max_len + 2)

print("Excel file 'formatted_pivot.xlsx' has been created.")
