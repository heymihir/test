import pandas as pd

def create_product_pivot(df):
    products = ["CUA", "EEFC", "TMD", "ASSETS"]
    pivot_data = {"City": df["City"]}
    for prod in products:
        # Get all EOP total columns for product and sort by date (extracted from last token)
        lm_cols = [col for col in df.columns if col.startswith(f"EOP total {prod} ")]
        if not lm_cols:
            continue
        lm_cols_sorted = sorted(lm_cols, key=lambda x: pd.to_datetime(x.split()[-1], errors="coerce"))
        if len(lm_cols_sorted) < 2:
            continue
        # Change: now using second last column for last month EOP total
        lm_orig = lm_cols_sorted[-2]
        lm_date = lm_orig.split()[-1]
        lm_new = f"{prod}_{lm_date}"
        pivot_data[lm_new] = df[lm_orig]
        
        daily_cols = [col for col in df.columns if col.startswith(f"EOP-{prod}-MTD-")]
        daily_sorted = sorted(daily_cols, key=lambda x: int(x.split("-")[-1]))
        if len(daily_sorted) < 2:
            continue
        daily_prev = daily_sorted[-2]
        daily_latest = daily_sorted[-1]
        daily_prev_new = f"{prod}_{daily_prev}"
        daily_latest_new = f"{prod}_{daily_latest}"
        pivot_data[daily_prev_new] = df[daily_prev]
        pivot_data[daily_latest_new] = df[daily_latest]
        
        pivot_data[f"{prod}_DailyGrowth"] = df[daily_latest] - df[daily_prev]
        pivot_data[f"{prod}_GrowthVsME"] = df[daily_latest] - df[lm_orig]
    
    pivot_df = pd.DataFrame(pivot_data)
    pivot_df = pivot_df.groupby("City", as_index=False).sum()
    num_cols = pivot_df.select_dtypes(include="number").columns
    pivot_df[num_cols] = pivot_df[num_cols].round().astype(int)
    total = pivot_df[num_cols].sum()
    total["City"] = "Total"
    pivot_df = pd.concat([pivot_df, pd.DataFrame([total])], ignore_index=True)
    return pivot_df

product_pivot = create_product_pivot(df_updated)
