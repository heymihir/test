import pandas as pd

# Assume df_manual and df_code are already defined with a common 'cust_id' column

# Merge dataframes on 'cust_id' with suffixes to distinguish manual vs. code values
merged_df = pd.merge(df_manual, df_code, on='cust_id', suffixes=('_manual', '_code'))

# Get list of columns to compare (exclude cust_id)
cols = [col for col in df_manual.columns if col != 'cust_id']

match_rates = {}
mismatch_list = []

for col in cols:
    manual_col = f"{col}_manual"
    code_col = f"{col}_code"
    # Boolean series: True when the values match
    is_equal = merged_df[manual_col] == merged_df[code_col]
    # Calculate match rate in percentage
    match_rates[col] = is_equal.mean() * 100
    
    if match_rates[col] < 100:
        # Select rows where there is a mismatch
        diff = merged_df[~is_equal][['cust_id', manual_col, code_col]].copy()
        diff['flag'] = col  # Flag which column is mismatched
        mismatch_list.append(diff)

# Create a DataFrame for match rates
match_rate_df = pd.DataFrame(list(match_rates.items()), columns=['Column', 'Match Rate'])

# Concatenate all mismatch details into one DataFrame (if any)
mismatch_df = pd.concat(mismatch_list, ignore_index=True) if mismatch_list else pd.DataFrame()

print("Match Rate % per Column:")
print(match_rate_df)
print("\nMismatches:")
print(mismatch_df)
